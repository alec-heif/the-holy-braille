package com.alec.heif.braille;

/** 
 * Note this cannot be run from within the Android project
 * but was useful for quickly iterating on various BitDotMapper
 * implementations in a separate java project.
 */
public class Main {


	public static void main(String[] args) throws Exception {
		
		int[][] correct = new int[][] {
				{0,0,1,1,1,0,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,0,0,1,1,0,0,1,1,1},
				{0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,1,1,0},
				{0,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0,0,1,1,0,0},
				{0,0,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,1,1,0},
				{0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,0},
				{0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0},
				
				{1,0,0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1},
				{1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1},
				{1,0,0,0,1,1,1,0,1,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1},
				{1,1,0,0,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1},
				{1,0,0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,0,1,0,0,1,1},
				{0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1},	
				
				{1,0,1,0,0,1,1,0,0,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,0,0,1,0,1},
				{1,1,0,1,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,0},
				{0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0},
				{1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,1,1,0,1,0,0},
				{1,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,1,1,0,0},
				{1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0},
				
				{0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,1,0,1,0,1,1,0,1,1},
				{1,0,0,1,0,0,0,1,0,1,1,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,1,0,1},
				{1,0,1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,1,0},
				{0,0,0,1,1,1,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,0,1,0,0,1},
				{0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,1,1,0,0,1,1},
				{0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0},
				
				{0,0,0,1,0,1,0,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1,1},
				{0,0,1,0,1,0,0,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0},
				{0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0},
				{1,0,0,0,1,0,0,1,0,0,0,1,1,0,0,1,0,1,0,0,0,0,1,1,0,0,1,0,0,0},
				{0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1},
				{0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,0,1}
		};
		int[][] bitsToParse = BitDotMapper.importTestBitMap("/Users/jchien/Documents/workspace/helpimblindandicantread/HolyBraille/libs/testBitMap.txt");
		System.out.println("Num of g rows: " + bitsToParse.length);
		System.out.println("Num of g cols: " + bitsToParse[0].length);
		
		BitDotMapper bitDotMapper = new BitDotMapper(bitsToParse);
		int[][] brailleDots = bitDotMapper.parse();
		System.out.println(BrailleUtils.parseBraille(brailleDots));
		for (int i = 0; i < brailleDots.length; i++) {
			for (int j = 0; j < brailleDots[0].length; j++) {
				if (correct[i][j] != brailleDots[i][j]) {
					System.out.println("Check (" + i + "," + j + ")");
				}
			}
		}


	}

}
